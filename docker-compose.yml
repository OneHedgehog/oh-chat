version: '3.1'
services:
  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./backend:/backend
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #docker-compose exec php php /backend/bin/console cache:clear
  #for access to console
  php:
    build: ./
    image: php:7.2-fpm-alpine
    volumes:
      - ./backend:/backend
  pgsql:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: uVK4PBfdNBncWLbmZMKG
      POSTGRES_DB: chat

  adminer:
    image: adminer
    restart: always
    ports:
      - 81:8080

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always

  rabbitmq1:
    image: rabbitmq:3-management
    hostname: rabbitmq1

  node:
    image: "node:8"
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
    volumes:
      - ./:/home/node/app
    expose:
      - "8081"
    command: "npm start"

  composer:
    restart: 'no'
    image: prooph/composer:7.2
    #also can use follow command:
    #docker run --rm -v $(pwd):/app prooph/composer:7.2 install
    #TODO fix to automatic upload
    command: install
    volumes:
      - ./backend:/backend
    #working dir is needed to load composer packages

    #run this, if need to run command in new container. Actually for windows
    #docker-compose run composer install
    working_dir: /backend